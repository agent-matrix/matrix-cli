[build-system]
requires = ["setuptools>=77", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "matrix-cli"
version = "0.1.1"
description = "Matrix CLI — thin UX layer over matrix-python-sdk (deep links, local builder, runtime)"
readme = { file = "README.md", content-type = "text/markdown" }


license = "Apache-2.0"
# Optionally ship the license file(s) explicitly (supported in setuptools>=77)
license-files = ["LICENSE"]

requires-python = ">=3.11"
authors = [{ name = "Ruslan Magana Vsevolodovna" }]
keywords = [
  "matrix",
  "mcp",
  "model context protocol",
  "cli",
  "agents",
  "tools",
  "runtime",
  "search",
  "installer",
]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Utilities",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "Typing :: Typed",
]
dependencies = [
  "typer>=0.12",
  "rich>=13.7",
  "matrix-python-sdk>=0.1.2",
  # You can drop tomli because requires-python >=3.11, but harmless if left:
  # "tomli; python_version<'3.11'",
]

[project.urls]
Homepage = "https://matrixhub.io"
API = "https://api.matrixhub.io"

[project.scripts]
matrix = "matrix_cli.__main__:main"

[project.optional-dependencies]
test = [
  "pytest>=8.0",
  "pytest-cov>=5.0",
  "pytest-mock",
]

# ✅ Constrain package discovery to avoid picking up 'backup'
[tool.setuptools.packages.find]
include = ["matrix_cli*"]
exclude = ["backup*", "tests*", "docs*"]

# If you ship typing marker, uncomment:
# [tool.setuptools.package-data]
# matrix_cli = ["py.typed"]

[tool.pytest.ini_options]
addopts = "-q"
pythonpath = ["."]
